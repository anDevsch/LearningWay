工具	Python
		Django
		创建环境变量
Django安装	下载 Django 压缩包，解压并和Python安装目录放在同一个根目录，进入 Django 目录，执行python setup.py install，然后开始安装，Django将要被安装到Python的Lib下site-packages。
	
创建新项目	django-admin(.exe)/django-admin.py startproject HelloWorld
启动服务器	python manage.py runserver 0.0.0.0:8000
定义模型	django-admin(.exe)/django-admin.py startapp TestModel

	#link	http://www.runoob.com/django/django-first-app.html
Error:
连接mysql错误，没有Mysqldb Model
安装 mysql-python mysql驱动:pip install mysql-python
出现错误>>>
pip install MySQL-python:error: Microsoft Visual C++ 14.0 is required. Get it with "Microsoft Visual C++ Build Tools": http://landinghub.visualstudio.com/visual-cpp-build-tools
	#for django use MySQLdb to connect mysql
	#link	http://blog.csdn.net/nima1994/article/details/74931621?locationNum=10&fps=1
	#download twisted #link	https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted
			Twisted是用Python实现的基于事件驱动的网络引擎框架
	安装twisted,进入.whl所在的文件夹,执行:pip install 带后缀的完整文件名
......
	安装完twisted还是安装mysql-python失败.....好吧
	#link	http://imshusheng.com/python/216.html
	又发现原来是Python3.x相对于python2.x中的ConfigParser全部改成小写了，说明pip中的mysql-python不支持python3.x呗，可能是pip中更新的比较慢吧，那我们就去下载他们的源码安装，然而他的源码最新更新时间是2012年，依然没有对python3.x支持！
	于是又找到了一个PyMySQL（https://github.com/PyMySQL/PyMySQL ），当然pip中也有它
	通过pip install PyMySQL安装成功
	Django不认PyMySQL,在__init__.py里加上
	>>>import pymysql
	>>>pymysql.install_as_MySQLdb()
	运行python manage.py runserver有提示
	:You have unapplied migrations; your app may not work properly until they are applied.
	:Run 'python manage.py migrate' to apply them.
	当然这个提示并不影响自带服务器的运行
	python manage.py migrate命令可以消除这个提示
	-------------------分割线-----------
	也可以通过pip install mysqlclient驱动连接mysql...
>>>>>>>>>>>>>>>
	重新开始
	django-admin startproject First		创建新Django项目
	django-admin startapp FirdataModel	创建APP模型
	修改项目里setting.py文件：
		DATABASES = {
			'default': {
				'ENGINE': 'django.db.backends.mysql',  # 或者使用 mysql.connector.django
				'NAME': 'firdata',
				'USER': 'root',
				'PASSWORD': '',
				'HOST':'localhost',
				'PORT':'3306',
			}
		}
		...
		INSTALLED_APPS = [
			'django.contrib.admin',
			'django.contrib.auth',
			'django.contrib.contenttypes',
			'django.contrib.sessions',
			'django.contrib.messages',
			'django.contrib.staticfiles',
			'FirdataModel',
		]
	修改FirdataModel中mosels.py:
		# models.py
		from django.db import models
		 
		class Test(models.Model):
			name = models.CharField(max_length=20)
	创建数据库firdata
	执行命令
		$ python manage.py migrate   # 创建表结构
		$ python manage.py makemigrations TestModel  # 让 Django 知道我们在我们的模型有一些变更
		$ python manage.py migrate TestModel   # 创建表结构
	创建表成功